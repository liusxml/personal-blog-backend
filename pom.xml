<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.blog</groupId>
    <artifactId>personal-blog-backend</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>personal-blog-backend (Root POM)</name>
    <description>个人博客后台项目 - 根模块，统一管理所有依赖、插件和模块</description>

    <!-- 1. 统一管理项目的所有顶级模块 -->
    <modules>
        <module>blog-common</module>
        <module>blog-modules</module>
        <module>blog-application</module>
    </modules>

    <!-- 2. 统一管理所有版本号 (Single Source of Truth) -->
    <properties>
        <java.version>21</java.version> <!-- 推荐使用稳定的LTS版本，如 17 或 21 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- 核心框架与插件版本 -->
        <spring-boot.version>3.5.5</spring-boot.version>
        <maven-compiler-plugin.version>3.14.0</maven-compiler-plugin.version>

        <!-- 主要三方库版本 -->
        <lombok.version>1.18.42</lombok.version>
        <mapstruct.version>1.6.3</mapstruct.version>
    </properties>

    <!-- 3. 统一声明依赖版本，子模块按需引入，无需指定版本 -->
    <dependencyManagement>
        <dependencies>
            <!-- Spring Boot BOM (Bill of Materials)，导入所有官方管理的依赖版本，这是最佳实践 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- =================================================== -->
            <!-- ============= 第三方库版本管理 ============= -->
            <!-- =================================================== -->


            <!-- =================================================== -->
            <!-- ============= 项目内部模块版本管理 ============= -->
            <!-- =================================================== -->
            <!-- 基础模块 -->
            <dependency>
                <groupId>com.blog</groupId>
                <artifactId>blog-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- System 模块 -->
            <dependency>
                <groupId>com.blog</groupId>
                <artifactId>blog-system-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.blog</groupId>
                <artifactId>blog-system-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- Article 模块 -->
            <dependency>
                <groupId>com.blog</groupId>
                <artifactId>blog-article-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.blog</groupId>
                <artifactId>blog-article-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- Comment 模块 -->
            <dependency>
                <groupId>com.blog</groupId>
                <artifactId>blog-comment-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.blog</groupId>
                <artifactId>blog-comment-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- File 模块 -->
            <dependency>
                <groupId>com.blog</groupId>
                <artifactId>blog-file-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.blog</groupId>
                <artifactId>blog-file-service</artifactId>
                <version>${project.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- 4. 统一声明插件版本和全局配置 -->
    <build>
        <pluginManagement>
            <plugins>
                <!-- Spring Boot Maven 插件，用于打包 -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                </plugin>

                <!-- Java 编译器插件，配置 JDK 版本和注解处理器 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <annotationProcessorPaths>
                            <!-- Lombok 注解处理器 -->
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <!-- MapStruct 注解处理器 -->
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
